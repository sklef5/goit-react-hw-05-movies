{"version":3,"file":"static/js/431.09d02094.chunk.js","mappings":"8LAgCA,UA5Ba,WACX,OAA0BA,EAAAA,EAAAA,MAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QACd,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAQ,UAAUL,GACfM,MAAK,SAAAC,GAAG,OAAIJ,EAASI,EAAIR,KAAjB,IACRS,OAAM,SAAAC,GAAC,OAAIC,QAAQC,IAAIF,EAAhB,GACX,GAAE,CAACV,EAAMC,KAGR,wBACGE,EAAMU,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAWC,EAAlC,EAAkCA,GAAlC,OACT,0BACGH,IACC,gBACEI,IAAG,yCAAoCJ,GACvCK,IAAKJ,KAGT,uBAAIA,IACHC,IAAa,uCAAeA,OARtBC,EADA,KAchB,C,uKC5BKG,EAAU,mCAEHC,EACA,sBADAA,EAEC,gBAFDA,EAGK,UAKlBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAalB,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8FACQD,EAAAA,EAAAA,IACND,EAAgB,CACnBG,OAAQ,CACNC,QAASL,EACTM,KAAM,KAGTnB,MAAK,SAAAC,GAAG,OAAIA,EAAImB,KAAKC,OAAb,IARN,0GAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,iFACQR,EAAAA,EAAAA,IACND,EAAiB,CACpBG,OAAQ,CACNC,QAASL,EACTU,MAAAA,KAGHvB,MAAK,SAAAC,GAAG,OAAIA,EAAImB,KAAKC,OAAb,IARN,0GAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAyBd,GAAzB,iFACQK,EAAAA,EAAAA,IAAA,UACHD,GADG,OACmBJ,GAAM,CAClCO,OAAQ,CACNC,QAASL,KAGZb,MAAK,SAAAC,GAAG,OAAIA,EAAImB,IAAR,IAPN,0GASA,SAAerB,EAAtB,iDAAO,OAAP,oBAAO,WAAuB0B,EAAMf,GAA7B,iFACQK,EAAAA,EAAAA,IAAA,UACHD,GADG,OACmBJ,EADnB,YACyBe,GAAQ,CAC1CR,OAAQ,CACNC,QAASL,KAGZb,MAAK,SAAAC,GAAG,OAAIA,EAAImB,IAAR,IAPN,0G","sources":["components/CastList/CastList.jsx","components/service/API.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getCast } from '../service/API';\n\nconst Cast = () => {\n  const { cast, movieId } = useParams();\n  const [casts, setCasts] = useState([]);\n\n  useEffect(() => {\n    getCast('credits',movieId)\n      .then(res => setCasts(res.cast))\n      .catch(e => console.log(e));\n  }, [cast, movieId]);\n\n  return (\n    <ul>\n      {casts.map(({ profile_path, name, character, id }) => (\n        <li key={id}>\n          {profile_path && (\n            <img\n              src={`https://image.tmdb.org/t/p/w185${profile_path}`}\n              alt={name}\n            />\n          )}\n          <p>{name}</p>\n          {character && <p>Character: {character}</p>}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'c0374a2201c609381a9f6560041cb206';\n\nexport const PATH = {\n  GET_TREND: '/trending/movie/day',\n  FIND_MOVIE: '/search/movie',\n  GET_INFO_MOVIE: '/movie/',\n  GET_ACTORS: '/movies/get-movie-credits',\n  GET_REVIEW: '/movies/get-movie-reviews',\n};\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const searchMovieApi = (path, page) => {\n  return axios\n    .get(path, {\n      params: {\n        api_key: API_KEY,\n        page: page,\n      },\n    })\n    .then(res => res.data);\n};\n\nexport async function getTrends() {\n  return await axios\n    .get(PATH.GET_TREND, {\n      params: {\n        api_key: API_KEY,\n        page: 1,\n      },\n    })\n    .then(res => res.data.results);\n}\n\nexport async function findMovies(query) {\n  return await axios\n    .get(PATH.FIND_MOVIE, {\n      params: {\n        api_key: API_KEY,\n        query,\n      },\n    })\n    .then(res => res.data.results);\n}\n\nexport async function findMovie(id) {\n  return await axios\n    .get(`${PATH.GET_INFO_MOVIE}${id}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(res => res.data);\n}\nexport async function getCast(path, id) {\n  return await axios\n    .get(`${PATH.GET_INFO_MOVIE}${id}/${path}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(res => res.data);\n}"],"names":["useParams","cast","movieId","useState","casts","setCasts","useEffect","getCast","then","res","catch","e","console","log","map","profile_path","name","character","id","src","alt","API_KEY","PATH","axios","getTrends","params","api_key","page","data","results","findMovies","query","findMovie","path"],"sourceRoot":""}