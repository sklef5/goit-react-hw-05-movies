{"version":3,"file":"static/js/437.abe4b7da.chunk.js","mappings":"iQAEaA,EAAUC,EAAAA,GAAAA,IAAH,+DAIPC,EAAMD,EAAAA,GAAAA,IAAH,iDAIHE,EAAQF,EAAAA,GAAAA,GAAH,qEAILG,EAASH,EAAAA,GAAAA,EAAH,sHAMNI,EAAOJ,EAAAA,GAAAA,EAAH,qEAIJK,EAASL,EAAAA,GAAAA,OAAH,qC,SC4BnB,EA/CqB,WAAO,IAAD,EACjBM,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAUV,GAASW,MAAK,SAAAC,GAAG,OAAIR,EAASQ,EAAb,GAC5B,GAAE,CAACZ,IAQJ,OACE,iCACA,SAACD,EAAD,CAAQc,KAAK,SAASC,QAPT,WACX,IAAMC,EAAmBR,EAASS,MAClCX,EAASU,EACZ,EAIC,sBACE,UAACtB,EAAD,YACE,SAACE,EAAD,CACEsB,IAAG,yCAAoCd,EAAMe,aAC7CC,IAAKhB,EAAMiB,WAGb,4BACE,SAACxB,EAAD,UAAQO,EAAMkB,SACd,SAACxB,EAAD,yBAFF,KAE8B,UAACC,EAAD,WAAQwB,KAAKC,MAAMpB,EAAMqB,cAAzB,UAC5B,SAAC3B,EAAD,wBAHF,KAG6B,SAACC,EAAD,UAAQK,EAAMsB,YACzC,SAAC5B,EAAD,sBACC,SAACC,EAAD,oBAAOK,EAAMuB,cAAb,aAAO,EAAcC,KAAI,SAAAC,GAAK,gBAAOA,EAAMC,KAAb,kBAInC,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMC,GAAG,OAAOd,MAAOT,EAASS,MAAhC,qBAEF,yBACE,SAAC,KAAD,CAAMc,GAAG,UAAUd,MAAOT,EAASS,MAAnC,sBADM,eAIV,SAAC,KAAD,MAGL,C,uKCjDKe,EAAU,mCAEHC,EACA,sBADAA,EAEC,gBAFDA,EAGK,UAKlBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAalB,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8FACQD,EAAAA,EAAAA,IACND,EAAgB,CACnBG,OAAQ,CACNC,QAASL,EACTM,KAAM,KAGT1B,MAAK,SAAAC,GAAG,OAAIA,EAAI0B,KAAKC,OAAb,IARN,0GAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,iFACQR,EAAAA,EAAAA,IACND,EAAiB,CACpBG,OAAQ,CACNC,QAASL,EACTU,MAAAA,KAGH9B,MAAK,SAAAC,GAAG,OAAIA,EAAI0B,KAAKC,OAAb,IARN,0GAWA,SAAe7B,EAAtB,+CAAO,OAAP,oBAAO,WAAyBgC,GAAzB,iFACQT,EAAAA,EAAAA,IAAA,UACHD,GADG,OACmBU,GAAM,CAClCP,OAAQ,CACNC,QAASL,KAGZpB,MAAK,SAAAC,GAAG,OAAIA,EAAI0B,IAAR,IAPN,0GASA,SAAeK,EAAtB,iDAAO,OAAP,oBAAO,WAAuBC,EAAMF,GAA7B,iFACQT,EAAAA,EAAAA,IAAA,UACHD,GADG,OACmBU,EADnB,YACyBE,GAAQ,CAC1CT,OAAQ,CACNC,QAASL,KAGZpB,MAAK,SAAAC,GAAG,OAAIA,EAAI0B,IAAR,IAPN,0G","sources":["components/Page/MovieDetails/MovieDetails.styled.jsx","components/Page/MovieDetails/MovieDetails.jsx","components/service/API.js"],"sourcesContent":["import styled from 'styled-components'\n\nexport const Wrapper = styled.div`\n    margin: 30px;\n    display: flex;\n`\nexport const Img = styled.img`\n    margin-right: 20px;\n`\n\nexport const Title = styled.h3`\n    font-size: 60px;\n    font-weight: 700;\n`\nexport const Title2 = styled.p`\n    font-size: 30px;\n    font-weight: 500;\n    margin-top: 10px;\n    margin-bottom: 10px;\n`\nexport const Desc = styled.p`\n    font-size: 18px;\n    font-weight: 400;\n`\nexport const Button = styled.button`\nmargin:15px\n`","import { useEffect, useState } from 'react';\nimport { useParams, Outlet, Link, useLocation, useNavigate } from 'react-router-dom';\nimport { findMovie } from '../../service/API';\nimport {Wrapper, Img, Title, Title2, Desc, Button} from './MovieDetails.styled'\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    findMovie(movieId).then(res => setMovie(res));\n  }, [movieId]);\n\n\n  const goBack = () => {\n      const prevPageLocation = location.state;\n      navigate(prevPageLocation);\n  }\n\n  return (\n    <>\n    <Button type=\"button\" onClick={goBack}>Go back</Button>\n      <Wrapper>\n        <Img\n          src={`https://image.tmdb.org/t/p/w342${movie.poster_path}`}\n          alt={movie.tagline}\n        />\n\n        <div>\n          <Title>{movie.title}</Title>\n          <Title2>UserScore:</Title2> <Desc >{Math.floor(movie.vote_average)}/10</Desc>\n          <Title2>Overview:</Title2> <Desc >{movie.overview}</Desc>\n          <Title2>Genres</Title2>\n          {<Desc>{movie.genres?.map(genre => `${genre.name}  `)}</Desc>}\n        </div>\n      </Wrapper>\n\n      <h3>Additional information</h3>\n      <ul>\n        <li>\n          <Link to='cast' state={location.state}>Cast</Link>\n        </li>\n        <li key=\"reviews\">\n          <Link to=\"reviews\" state={location.state}>Reviews</Link>\n        </li>\n      </ul>\n      <Outlet/>\n    </>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = 'c0374a2201c609381a9f6560041cb206';\n\nexport const PATH = {\n  GET_TREND: '/trending/movie/day',\n  FIND_MOVIE: '/search/movie',\n  GET_INFO_MOVIE: '/movie/',\n  GET_ACTORS: '/movies/get-movie-credits',\n  GET_REVIEW: '/movies/get-movie-reviews',\n};\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const searchMovieApi = (path, page) => {\n  return axios\n    .get(path, {\n      params: {\n        api_key: API_KEY,\n        page: page,\n      },\n    })\n    .then(res => res.data);\n};\n\nexport async function getTrends() {\n  return await axios\n    .get(PATH.GET_TREND, {\n      params: {\n        api_key: API_KEY,\n        page: 1,\n      },\n    })\n    .then(res => res.data.results);\n}\n\nexport async function findMovies(query) {\n  return await axios\n    .get(PATH.FIND_MOVIE, {\n      params: {\n        api_key: API_KEY,\n        query,\n      },\n    })\n    .then(res => res.data.results);\n}\n\nexport async function findMovie(id) {\n  return await axios\n    .get(`${PATH.GET_INFO_MOVIE}${id}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(res => res.data);\n}\nexport async function getCast(path, id) {\n  return await axios\n    .get(`${PATH.GET_INFO_MOVIE}${id}/${path}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(res => res.data);\n}"],"names":["Wrapper","styled","Img","Title","Title2","Desc","Button","movieId","useParams","useState","movie","setMovie","navigate","useNavigate","location","useLocation","useEffect","findMovie","then","res","type","onClick","prevPageLocation","state","src","poster_path","alt","tagline","title","Math","floor","vote_average","overview","genres","map","genre","name","to","API_KEY","PATH","axios","getTrends","params","api_key","page","data","results","findMovies","query","id","getCast","path"],"sourceRoot":""}